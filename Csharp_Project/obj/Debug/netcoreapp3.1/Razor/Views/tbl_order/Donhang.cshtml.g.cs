#pragma checksum "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\tbl_order\Donhang.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b229cf9f07e9160d3681a2c096f24d69b3d44e9a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_tbl_order_Donhang), @"mvc.1.0.view", @"/Views/tbl_order/Donhang.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\_ViewImports.cshtml"
using Csharp_Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\_ViewImports.cshtml"
using Csharp_Project.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b229cf9f07e9160d3681a2c096f24d69b3d44e9a", @"/Views/tbl_order/Donhang.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6dfe8b1dba119435608b50da958da69c74a9a936", @"/Views/_ViewImports.cshtml")]
    public class Views_tbl_order_Donhang : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Donhang.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/responsive.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\tbl_order\Donhang.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b229cf9f07e9160d3681a2c096f24d69b3d44e9a4695", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
    <!-- <link rel='shortcut icon' href='https://img.icons8.com/fluency/100/000000/music-band.png'/> -->
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b229cf9f07e9160d3681a2c096f24d69b3d44e9a5264", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b229cf9f07e9160d3681a2c096f24d69b3d44e9a6443", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://kit.fontawesome.com/610ab90504.js"" crossorigin=""anonymous""></script>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,100,300,700' rel='stylesheet' type='text/css'>
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css""
          integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">
    <link href=""https://fonts.googleapis.com/css?family=Lobster"" rel=""stylesheet"" type=""text/css"">
    <link href='https://fonts.googleapis.com/css?family=Inter' rel='stylesheet'>
    <script src=""https://code.jquery.com/jquery-3.2.1.min.js""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b229cf9f07e9160d3681a2c096f24d69b3d44e9a9158", async() => {
                WriteLiteral("\r\n    <div id=\"main\">\r\n        <div id=\"header\">\r\n            <!-- Begin nav -->\r\n            <ul id=\"nav\">\r\n                <li><a");
                BeginWriteAttribute("href", " href=\"", 1434, "\"", 1479, 1);
#nullable restore
#line 30 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\tbl_order\Donhang.cshtml"
WriteAttributeValue("", 1441, Url.Action("CusList", "tbl_shipping"), 1441, 38, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">Quản lí tài khoản</a></li>\r\n                <li><a");
                BeginWriteAttribute("href", " href=\"", 1531, "\"", 1575, 1);
#nullable restore
#line 31 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\tbl_order\Donhang.cshtml"
WriteAttributeValue("", 1538, Url.Action("ProList", "tbl_product"), 1538, 37, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">Quản lí sản phẩm</a></li>
                <li><a href=""#"">Quản lí đơn hàng</a></li>
                <li><a href=""#"">Quản lí khuyến mãi</a></li>
                <li><a href=""#"">Quản lí nhà cung cấp</a></li>
                <li><a href=""#"">Thống kê</a></li>
                <li> <a> LOGOUT </a> </li>
            </ul>
            <div class=""menu-btn""><i class=""fas fa-bars""></i></div>
        </div>
    </div>

    <section class=""ftco-section"">
        <div class=""container"">
            <div class=""row justify-content-center"">
                <div class=""col-md-6 text-center mb-5"">
                    <div class=""center-outer"">
                        <div class=""center-inner"">
                            <div class=""bubbles"">
                                <h1>Quản lí đơn hàng</h1>
                            </div>
                        </div>
                    </div>
                    <div class=""content__search"">
                        <input type=""text"" placeholder=""Nhập và");
                WriteLiteral(@"o đây"">
                        <button id=""search"">Search</button>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""table-wrap"">
                        <table class=""table table-responsive-xl"">
                            <thead>
                                <tr>
                                    <th>Mã đơn hàng</th>
                                    <th>Email</th>
                                    <th>Người nhận</th>
                                    <th>Địa chỉ</th>
                                    <th>SĐT</th>
                                    <th>Tổng tiền</th>
                                    <th>Trạng thái</th>
                                    <th>&nbsp;</th>
                                    <th>&nbsp;</th>
                                    <th>&nbsp;</th>
                                </tr>
                            </thead>
  ");
                WriteLiteral(@"                          <tbody>
                                <!-- <tr class=""alert"" role=""alert"">
                                    <td class=""d-flex align-items-center"">
                                        <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
                                        <div class=""pl-3 email"">
                                            <span>Tivi</span>
                                            <span>Added: 01/03/2020</span>
                                        </div>
                                    </td>
                                    <td>Tivi Samsung 19000 123.54 inches</td>
                                    <td>3.000.000</td>
                                    <td class=""status""><span class=""active"">Còn hàng</span></td>
                                    <td>
                                        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                         ");
                WriteLiteral(@"   <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
                                        </button>
                                    </td>
                                </tr>
                                <tr class=""alert"" role=""alert"">
                                    <td class=""d-flex align-items-center"">
                                        <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
                                        <div class=""pl-3 email"">
                                            <span>Tivi</span>
                                            <span>Added: 01/03/2020</span>
                                        </div>
                                    </td>
                                    <td>Tivi Samsung 19000 123.54 inches</td>
                                    <td>3.000.000</td>
                                    <td class=""status""><span class=""block"">Hết hàng</span></td>
                                    <td");
                WriteLiteral(@">
                                        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                            <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
                                        </button>
                                    </td>
                                </tr>
                                <tr class=""alert"" role=""alert"">
                                    <td class=""d-flex align-items-center"">
                                        <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
                                        <div class=""pl-3 email"">
                                            <span>Tivi</span>
                                            <span>Added: 01/03/2020</span>
                                        </div>
                                    </td>
                                    <td>Tivi Samsung 19000 123.54 inches</td>
                              ");
                WriteLiteral(@"      <td>3.000.000</td>
                                    <td class=""status""><span class=""active"">Còn hàng</span></td>
                                    <td>
                                        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                            <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
                                        </button>
                                    </td>
                                </tr>
                                <tr class=""alert"" role=""alert"">
                                    <td class=""d-flex align-items-center"">
                                        <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
                                        <div class=""pl-3 email"">
                                            <span>Tivi</span>
                                            <span>Added: 01/03/2020</span>
                                     ");
                WriteLiteral(@"   </div>
                                    </td>
                                    <td>Tivi Samsung 19000 123.54 inches</td>
                                    <td>3.000.000</td>
                                    <td class=""status""><span class=""active"">Còn hàng</span></td>
                                    <td>
                                        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                            <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
                                        </button>
                                    </td>
                                </tr>
                                <tr class=""alert"" role=""alert"">
                                    <td class=""d-flex align-items-center"">
                                        <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
                                        <div class=""pl-3 email"">
             ");
                WriteLiteral(@"                               <span>Tivi</span>
                                            <span>Added: 01/03/2020</span>
                                        </div>
                                    </td>
                                    <td>Tivi Samsung 19000 123.54 inches</td>
                                    <td>3.000.000</td>
                                    <td class=""status""><span class=""active"">Còn hàng</span></td>
                                    <td>
                                        <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                            <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
                                        </button>
                                    </td>
                                </tr> -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </");
                WriteLiteral(@"section>
    <div class=""no-result"">Không có kết quả tìm kiếm</div>
    <div class=""demo"">
        <nav class=""pagination-outer"" aria-label=""Page navigation"">
            <ul class=""pagination justify-content-center"">
                <li class=""page-item"">
                    <a id=""Prev"" class=""page-link disabled"" aria-label=""Previous"">
                        <span aria-hidden=""true"">«</span>
                    </a>
                </li>
                <div class=""page-number"">
                    <!-- <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                    <li class=""page-item"" ><a class=""page-link"" href=""#"">2</a></li>
                    <li class=""page-item active""><a class=""page-link"" href=""#"">3</a></li>
                    <li class=""page-item""><a class=""page-link"" href=""#"">4</a></li>
                    <li class=""page-item""><a class=""page-link"" href=""#"">5</a></li> -->
                </div>
                <li class=""page-item"">
                    <a id");
                WriteLiteral("=\"Next\" class=\"page-link\" aria-label=\"Next\">\r\n                        <span aria-hidden=\"true\">»</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</html>
<!-- Xử lí mobile menu -->
<script>
    var header = document.querySelector('#header')
    var menuBTN = document.querySelector('#header .menu-btn');
    var headerHeight = header.clientHeight;

    // Xử lí mở đóng menu
    menuBTN.onclick = function () {
        var isClosed = header.clientHeight === headerHeight;
        if (isClosed) {
            header.style.height = ""auto"";


        } else {
            header.style.height = null;

        }
    }
    // Xử lí click vào menu item rồi đóng menu
    var menuItems = document.querySelectorAll('#nav li a[href*=""#""]')
    var menuItemsLength = menuItems.length

    for (var i = 0; i < menuItemsLength; i++) {
        var menuItem = menuItems[i]
        menuItem.onclick = function (e) {

            var isParent = this.nextElementSibling && this.nextElementSibling.classList.contains('subnav')
            // var isOpen=this.nextElementSibling && this.nextElementSibling.classList.contains('subnav') && document.querySelector");
            WriteLiteral(@"('.subnav').position
            if (isParent) {
                // var isOpened=document.querySelector("".subnav"").style.position;
                // if(isOpened==""initial""){
                // document.querySelector("".subnav"").style.position = ""absolute"";
                // }else{
                //     document.querySelector("".subnav"").style.position = ""initial"";
                // }
                e.preventDefault()
            } else {
                header.style.height = null;
            }
        }
    }
</script>

<!-- Hiệu ứng nổi bọt -->
<script>
    jQuery(document).ready(function ($) {
        var bArray = [];
        var sArray = [4, 6, 8, 10];
        for (var i = 0; i < $('.bubbles').width(); i++) {
            bArray.push(i);
        }
        function randomValue(arr) {
            return arr[Math.floor(Math.random() * arr.length)];
        }
        setInterval(function () {
            var size = randomValue(sArray);
            $('.bubbles').append('<div clas");
            WriteLiteral(@"s=""individual-bubble"" style=""left: ' + randomValue(bArray) + 'px; width: ' + size + 'px; height:' + size + 'px;""></div>');
            $('.individual-bubble').animate({
                'bottom': '100%',
                'opacity': '-=0.7'
            }, 3000, function () {
                $(this).remove()
            }
            );

        }, 350);

    });
</script>
<script>

    const products = ");
#nullable restore
#line 267 "D:\Solfware\C#Project\Doan_Framework\Csharp_Project\Views\tbl_order\Donhang.cshtml"
                Write(Html.Raw(Json.Serialize(ViewData["Listo"])));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

    const $ = document.querySelector.bind(document)
    const $$ = document.querySelectorAll.bind(document)
    const searchText = $('.content__search input');
    let currentPage = 1;
    let perPage = 5;
    let start = 0;
    let end = perPage;
    let productArr = [];
    productArr = products;
    const nextBtn = $(""#Next"")
    const prevBtn = $(""#Prev"")
    const pageNumber = $("".page-number"")
    let totalPages = Math.ceil(productArr.length / perPage)
    function getCurrentPage(currentPage) {
        start = (currentPage - 1) * perPage;
        end = currentPage * perPage
        totalPages = Math.ceil(productArr.length / perPage)
    }
    function initRender(productAr, totalPage) {
        renderProduct(productAr);
        renderListPage(totalPage);
    }

    // <td class=""d-flex align-items-center"">
    // <div class=""img"" style=""background-image: url(./product-1.jpg);""></div>
    // <div class=""pl-3 email"">
    //     <span>Tivi</span>
    //     <span>Added: 01/03");
            WriteLiteral(@"/2020</span>
    // </div>
    // </td>
    // <td>Tivi Samsung 19000 123.54 inches</td>
    // <td class=""cost"">3.000.000</td>
    // <td class=""status""><span class=""block"">Hết hàng</span></td>
    // <td>
    // <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
    //     <span aria-hidden=""true""><i class=""fas fa-ellipsis-v""></i></span>
    // </button>
    // </td>
    function renderProduct(productArr) {
        let html = '';
        const content = productArr.map((item, index) => {
            if (index >= start && index < end) {
                html += `  <tr class=""alert"" role=""alert"">
                        <td class=""d-flex align-items-center"">
                        <div class=""pl-3 email"">
                            <span>DH${item.id}</span>
                            <span>Added: ${item.time}</span>
                        </div>
                        </td>
                        <td>${item.email}</td>
                        <td>${item.rec");
            WriteLiteral(@"eived}</td>
                        <td>${item.address}</td>
                        <td>${item.numberPhone}</td>
                        <td>${item.cost}</td>
                        <td class=""status""><span class=""${item.status}"">${item.state}</span></td>
                        <td>
                        <button type=""button"" class=""close close0"" data-dismiss=""alert"" aria-label=""Close"">
                        <span id=""${item.id}"" aria-hidden=""true""><i id=""${item.status}"" class=""fas fa-check-circle""></i></span>
                        </button>
                        </td>
                        <td>
                        <button type=""button"" class=""close close1"" data-dismiss=""alert"" aria-label=""Close"">
                        <span id=""${item.id}"" aria-hidden=""true""><i id=""${item.status}"" class=""fas fa-spinner""></i></span>
                        </button>
                        </td>
                        <td>
                        <button type=""button"" class=""close close2"" d");
            WriteLiteral(@"ata-dismiss=""alert"" aria-label=""Close"">
                            <span id=""${item.id}"" aria-hidden=""true""><i id=""${item.status}"" class=""fas fa-minus-circle""></i></span>
                        </button>
                        </td>
                        </tr>`;
                return html;
            }
        });
        document.querySelector('.table tbody').innerHTML = html
    }
    initRender(productArr, totalPages)
    changePage()
    function renderListPage(totalPages) {
        let html = '';
        html += `<li class=""page-item active""><a class=""page-link "">${1}</a></li>`
        for (let i = 2; i <= totalPages; i++) {
            html += `<li class=""page-item""><a class=""page-link"" >${i}</a></li>`
        }
        pageNumber.innerHTML = html
    }
    function changePage() {
        const currentPages = $$('.page-number li')
        for (let i = 0; i < currentPages.length; i++) {
            currentPages[i].addEventListener('click', (e) => {
                const val");
            WriteLiteral(@"ue = i + 1;
                currentPage = value;
                let numberPage = $$("".page-number li"")
                for (let j of numberPage) {
                    if (j.classList.contains(""active"")) {
                        j.classList.remove(""active"");
                    }
                }
                currentPages[i].classList.add('active')
                if (currentPage > 1 && currentPage < totalPages) {
                    prevBtn.classList.remove(""disabled"")
                    nextBtn.classList.remove(""disabled"")
                }
                if (currentPage == 1) {
                    prevBtn.classList.add(""disabled"")
                    nextBtn.classList.remove(""disabled"")
                }
                if (currentPage == totalPages) {
                    nextBtn.classList.add(""disabled"")
                    prevBtn.classList.remove(""disabled"")
                }
                // currentPages[i].classList.add(""active"")
                getCurrentPage(currentPag");
            WriteLiteral(@"e)
                renderProduct(productArr)
                changeState()
            })
        }
    }

    nextBtn.addEventListener('click', (e) => {
        currentPage++;
        if (currentPage > totalPages) {
            currentPage = totalPages
        }
        if (currentPage == totalPages) {
            nextBtn.classList.add(""disabled"")
        }
        prevBtn.classList.remove(""disabled"")
        let numberPage = $$("".page-number li"")
        for (let j of numberPage) {
            if (j.classList.contains(""active"")) {
                j.classList.remove(""active"");
            }
        }
        numberPage[currentPage - 1].classList.add('active')
        getCurrentPage(currentPage)
        renderProduct(productArr)
        changeState()
    })
    prevBtn.addEventListener('click', (e) => {
        console.log(currentPage)
        currentPage--;
        if (currentPage <= 1) {
            currentPage = 1
        }
        if (currentPage == 1) {
            prevB");
            WriteLiteral(@"tn.classList.add(""disabled"")
        }
        nextBtn.classList.remove(""disabled"")
        let numberPage = $$("".page-number li"")
        for (let j of numberPage) {
            if (j.classList.contains(""active"")) {
                j.classList.remove(""active"");
            }
        }
        numberPage[currentPage - 1].classList.add('active')
        getCurrentPage(currentPage)
        renderProduct(productArr)
        changeState()
    })
</script>
<!-- xử lí search -->
<script>
    let idPage = 1;
    const searchBtn = $('#search');
    const noResult = $('.no-result')
    const tableWrap = $('.table-wrap')
    const table = $('.table')
    console.log(table)
    searchBtn.addEventListener('click', () => {
        idPage = 1;
        productArr = [];
        products.forEach((item, index) => {
            if (item.email.toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1 || item.address.toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1 |");
            WriteLiteral(@"| item.numberPhone.toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1 || item.received.toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1 || (item.cost).toString().toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1 || item.state.toLocaleLowerCase().indexOf(searchText.value.toLocaleLowerCase()) != -1) {
                productArr.push(item);
            }

        });
        if (productArr.length === 0) {
            console.log(productArr)
            noResult.style.display = 'block';
            tableWrap.classList.remove(""table-wrap"")
            table.classList.add(""mw-1100"")
        } else {
            console.log(productArr)
            noResult.style.display = 'none';
            tableWrap.classList.add(""table-wrap"")
            table.classList.remove(""mw-1100"")
        }
        getCurrentPage(idPage)
        initRender(productArr, totalPages)
        changePage()
        changeState()
        if (totalPages <= 1) {
 ");
            WriteLiteral(@"           prevBtn.classList.add('disabled');
            nextBtn.classList.add('disabled');
        } else {
            nextBtn.classList.remove('disabled');
        }
    })
    searchText.addEventListener(""keyup"", (event) => {
        if (event.keyCode === 13) {
            event.preventDefault();
            searchBtn.click();
        }
    });
</script>
<!--  <tr class=""alert"" role=""alert"">
                       <td class=""d-flex align-items-center"">
                       <div class=""pl-3 email"">
                           <span>${item.id}</span>
                           <span>Added: ${item.time}</span>
                       </div>
                       </td>
                       <td>${item.email}</td>
                       <td>${item.received}</td>
                       <td>${item.address}</td>
                       <td>${item.numberPhone}</td>
                       <td>${item.cost}</td>
                       <td class=""status""><span class=""${item.status}"">${item.s");
            WriteLiteral(@"tate}</span></td>
                       <td>
                       <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                       <span aria-hidden=""true""><i id=""${item.status}"" class=""fas fa-check-circle""></i></span>
                       </button>
                       </td>
                       <td>
                       <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                       <span aria-hidden=""true""><i id=""${item.status}"" class=""fas fa-spinner""></i></span>
                       </button>
                       </td>
                       <td>
                       <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                           <span aria-hidden=""true""><i class=""fas fa-minus-circle""></i></span>
                       </button>
                       </td>
                       </tr> -->
<script>
    function changeState() {
        var blockBtns0 = $$('.clos");
            WriteLiteral(@"e0');
        var blockBtns1 = $$('.close1');
        var blockBtns2 = $$('.close2');
        var stt = $$('.status');
        for (var i of stt) {
            if (i.childNodes[0].className == 'waiting') {
                i.nextElementSibling.nextElementSibling.children[0].classList.add('disabled')
                // console.dir(i.nextElementSibling.nextElementSibling.children[0])
            } else if (i.childNodes[0].className == 'active') {
                i.nextElementSibling.children[0].classList.add('disabled')
            }
            else {
                i.nextElementSibling.nextElementSibling.nextElementSibling.children[0].classList.add('disabled')
            }
        }
        for (let j of blockBtns0) {
            j.addEventListener('click', (e) => {
                jQuery.ajax({
                    url: '/tbl_order/CapNhatOrder',
                    dataType: ""json"",
                    type: ""POST"",
                    data: {
                        order_id: e.target");
            WriteLiteral(@".parentElement.id,
                        order_status: ""Đã giao"",
                    },
                    success: function (data) {
                        if (data != 0) {
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""waiting"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""block"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.add(""active"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[15].children[0].classList.add(""disabled"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].innerText = ""Đã giao""
                            e.target.parentElement.offsetParent.offsetParent.childNodes[17].children[0].classList.remove(""disabled"")
                            e.target.parentElement.offs");
            WriteLiteral(@"etParent.offsetParent.childNodes[19].children[0].classList.remove(""disabled"")
                        }
                    },
                });

            })
        }
        for (let j of blockBtns1) {
            j.addEventListener('click', (e) => {
                jQuery.ajax({
                    url: '/tbl_order/CapNhatOrder',
                    dataType: ""json"",
                    type: ""POST"",
                    data: {
                        order_id: e.target.parentElement.id,
                        order_status: ""Đang giao"",
                    },
                    success: function (data) {
                        if (data != 0) {
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""active"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""block"")
                            e.target.parentElement.offsetParent.offsetParent.ch");
            WriteLiteral(@"ildNodes[13].children[0].classList.add(""waiting"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[17].children[0].classList.add(""disabled"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].innerText = ""Đang giao""
                            e.target.parentElement.offsetParent.offsetParent.childNodes[15].children[0].classList.remove(""disabled"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[19].children[0].classList.remove(""disabled"")
                        }
                    },
                });
   
            })
        }
        for (let j of blockBtns2) {
            j.addEventListener('click', (e) => {
                jQuery.ajax({
                    url: '/tbl_order/CapNhatOrder',
                    dataType: ""json"",
                    type: ""POST"",
                    data: {
                        order_id: e.target.parentElement.id,
     ");
            WriteLiteral(@"                   order_status: ""Đã hủy đơn"",
                    },
                    success: function (data) {
                        if (data != 0) {
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""active"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.remove(""waiting"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].classList.add(""block"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[19].children[0].classList.add(""disabled"")
                            e.target.parentElement.offsetParent.offsetParent.childNodes[13].children[0].innerText = ""Đã hủy đơn""
                            e.target.parentElement.offsetParent.offsetParent.childNodes[15].children[0].classList.remove(""disabled"")
                            e.target.parentElement.offsetParent.offsetPare");
            WriteLiteral("nt.childNodes[17].children[0].classList.remove(\"disabled\")\r\n                        }\r\n                    },\r\n                });\r\n                \r\n            })\r\n        }\r\n    }\r\n    changeState()\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
